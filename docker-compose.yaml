services:
  nginx:
    container_name: nginx
    image: nginx:stable-alpine-perl
    restart: on-failure:3
    ports:
      - $NGINX_PORT:$NGINX_PORT
    networks:
      - nginx-connection
    volumes:
      - ./conf/:/etc/nginx/conf.d/

  blue:
    container_name: blue
    image: habitpay/backend:${version}
    ports:
      - "$BLUE_PORT:$BACKEND_PORT"
    restart: on-failure:3
    healthcheck:
      test: "wget --quiet --spider localhost:$$BACKEND_PORT/actuator/health || exit 1"
      start_period: 40s
      interval: 1m
      timeout: 5s
      retries: 5
    env_file:
      - ../env/.env.backend.prod
      - ../env/.env.db.prod
    networks:
      - nginx-connection

  green:
    container_name: green
    image: habitpay/backend:${version}
    ports:
      - "$GREEN_PORT:$BACKEND_PORT"
    restart: on-failure:3
    healthcheck:
      test: "wget --quiet --spider localhost:$$BACKEND_PORT/actuator/health || exit 1"
      start_period: 40s
      interval: 1m
      timeout: 5s
      retries: 5
    env_file:
      - ../env/.env.backend.prod
      - ../env/.env.db.prod
    networks:
      - nginx-connection

  postgres:
    container_name: postgres
    image: postgres:16.2-alpine3.18
    restart: on-failure:3
    ports:
      - $POSTGRES_PORT:$POSTGRES_PORT
    networks:
      - db-connection
    healthcheck:
      test: pg_isready -h 127.0.0.1 -d $$POSTGRES_DB -U $$POSTGRES_USER
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      TZ: "Asia/Seoul"
    env_file:
      - ../env/.env.db.prod

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: on-failure:3
    ports:
      - $PGADMIN_PORT:80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    env_file:
      - ../env/.env.pgadmin
    networks:
      - nginx-connection
      - db-connection
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres-data:
  pgadmin-data:

networks:
  nginx-connection:
    driver: bridge
  db-connection:
    driver: bridge
